#LyX 2.0 created this file. For more info see http://www.lyx.org/
\lyxformat 413
\begin_document
\begin_header
\textclass book
\begin_preamble
\usepackage {graphicx}
\usepackage {longtable}

\usepackage {indentfirst}
\renewenvironment{center}{\par\centering}{\par}
\end_preamble
\use_default_options false
\master DocumentoMestre-Trabalho-ProgramacaoPratica.lyx
\maintain_unincluded_children false
\language brazilian
\language_package default
\inputencoding latin1
\fontencoding global
\font_roman default
\font_sans default
\font_typewriter default
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\float_placement p
\paperfontsize 12
\spacing onehalf
\use_hyperref false
\papersize a4paper
\use_geometry true
\use_amsmath 1
\use_esint 0
\use_mhchem 1
\use_mathdots 1
\cite_engine basic
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\use_refstyle 0
\index Índice
\shortcut idx
\color #008000
\end_index
\paperwidth 210mm
\paperheight 297mm
\leftmargin 30mm
\topmargin 25mm
\rightmargin 20mm
\bottommargin 20mm
\secnumdepth 2
\tocdepth 2
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle fancy
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Chapter
AOO -- Análise Orientada a Objeto 
\begin_inset CommandInset label
LatexCommand label
name "sec:AOO"

\end_inset


\end_layout

\begin_layout Standard
A terceira etapa do desenvolvimento de um software é a AOO -- Análise Orientada
 a Objeto.
 A AOO utiliza algumas regras para identificar os objetos de interesse,
 as relações entre os pacotes, as classes, os atributos, os métodos, as
 heranças, as associações, as agregações, as composições e as dependências.
 
\end_layout

\begin_layout Section
Diagramas de classes
\end_layout

\begin_layout Standard
O diagrama de classes é apresentado nas Figuras 4.1, 4.2 e 4.3.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename C:/Users/Renan/Desktop/Trabalho Programação Prática/imagens/diagrama_de_classes.png
	scale 80
	rotateAngle 90
	rotateOrigin center

\end_inset


\begin_inset Caption

\begin_layout Plain Layout
Diagrama de classes.
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename C:/Users/Renan/Desktop/Trabalho Programação Prática/imagens/diagrama_de_classes_a.png
	scale 90
	rotateAngle 90
	rotateOrigin center

\end_inset


\begin_inset Caption

\begin_layout Plain Layout
Diagrama de classes (a).
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename C:/Users/Renan/Desktop/Trabalho Programação Prática/imagens/diagrama_de_classes_b.png
	rotateOrigin center

\end_inset


\begin_inset Caption

\begin_layout Plain Layout
Diagrama de classes (b).
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Dicionário de classes
\end_layout

\begin_layout Itemize
Classe CPoco: Classe que possui as características/atributos do poço, e
 tem uma função de entrada de dados por parte do usuário.
\end_layout

\begin_deeper
\begin_layout Itemize
atributo vazao.
\end_layout

\begin_layout Itemize
atributo tempoProducao.
\end_layout

\begin_layout Itemize
atributo pressaoPoco.
\end_layout

\begin_layout Itemize
atributo raioPoco.
\end_layout

\begin_layout Itemize
método EntradaDados ( ): Método que pede ao usuário os parâmetros necessários
 para o programa.
\end_layout

\begin_layout Itemize
método Erro ( ): Verifica e retorna uma mensagem de erro, caso haja alguma
 entrada equivocada do usuário.
\end_layout

\begin_layout Itemize
método Vazao (_vazao): Método que seta o valor do atributo vazao.
\end_layout

\begin_layout Itemize
método Vazao ( ): Método que retorna o valor do atributo vazao.
 
\end_layout

\begin_layout Itemize
método TempoProducao (_tempoProducao): Método que seta o valor do atributo
 tempoProducao.
\end_layout

\begin_layout Itemize
método TempoProducao ( ): Método que retorna o valor do atributo tempoProducao.
 
\end_layout

\begin_layout Itemize
método PressaoPoco (_pressaoPoco): Método que seta o valor do atributo pressaoPo
co.
\end_layout

\begin_layout Itemize
método PressaoPoco ( ): Método que retorna o valor do atributo pressaoPoco.
 
\end_layout

\begin_layout Itemize
método RaioPoco (_raioPoco): Método que seta o valor do atributo raioPoco.
\end_layout

\begin_layout Itemize
método RaioPoco ( ): Método que retorna o valor do atributo raioPoco.
 
\end_layout

\end_deeper
\begin_layout Itemize
Classe CReservatorio: Classe que possui as características/atributos do
 reservatório, e tem uma função de entrada de dados por parte do usuário.
\end_layout

\begin_deeper
\begin_layout Itemize
atributo porosidade.
\end_layout

\begin_layout Itemize
atributo altura.
\end_layout

\begin_layout Itemize
atributo sistemaUnidade.
\end_layout

\begin_layout Itemize
método EntradaDados ( ): Método que pede ao usuário os parâmetros necessários
 para o programa.
\end_layout

\begin_layout Itemize
método SistemaUnidades ( ): Método do tipo void que pergunta ao usuário
 o sistema de unidades utilizado para os parâmetros fornecidos, atráves
 de um pequeno menu.
\end_layout

\begin_layout Itemize
método SistemaUnidade (_sistemaUnidade): Método que seta o valor do atributo
 sistemaUnidade.
\end_layout

\begin_layout Itemize
método SistemaUnidade ( ): Método que retorna o valor do atributo sistemaUnidade.
 
\end_layout

\begin_layout Itemize
método Erro ( ): Verifica e retorna uma mensagem de erro, caso haja alguma
 entrada equivocada do usuário.
\end_layout

\begin_layout Itemize
método Porosidade (_porosidade): Método que seta o valor do atributo porosidade.
\end_layout

\begin_layout Itemize
método Porosidade ( ): Método que retorna o valor do atributo porosidade.
 
\end_layout

\begin_layout Itemize
método Altura (_altura): Método que seta o valor do atributo altura.
\end_layout

\begin_layout Itemize
método Altura ( ): Método que retorna o valor do atributo altura.
 
\end_layout

\end_deeper
\begin_layout Itemize
Classe CFluido: Classe que possui as características/atributos do fluido,
 e tem uma função de entrada de dados por parte do usuário.
\end_layout

\begin_deeper
\begin_layout Itemize
atributo fatorVolumeFormacao.
\end_layout

\begin_layout Itemize
atributo viscosidade.
\end_layout

\begin_layout Itemize
atributo compressibilidade.
\end_layout

\begin_layout Itemize
método EntradaDados ( ): Método do tipo void que pede ao usuário os parâmetros
 necessários para o programa.
\end_layout

\begin_layout Itemize
método Erro ( ): Verifica e retorna uma mensagem de erro, caso haja alguma
 entrada equivocada do usuário.
\end_layout

\begin_layout Itemize
método FatorVolumeFormacao (_fatorVolumeFormacao): Método que seta o valor
 do atributo fatorVolumeFormacao.
\end_layout

\begin_layout Itemize
método FatorVolumeFormacao ( ): Método que retorna o valor do atributo fatorVolu
meFormacao.
 
\end_layout

\begin_layout Itemize
método Viscosidade (_viscosidade): Método que seta o valor do atributo viscosida
de.
\end_layout

\begin_layout Itemize
método Viscosidade ( ): Método que retorna o valor do atributo viscosidade.
 
\end_layout

\begin_layout Itemize
método Compressibilidade (_compressibilidade): Método que seta o valor do
 atributo compressibilidade.
\end_layout

\begin_layout Itemize
método Compressibilidade ( ): Método que retorna o valor do atributo compressibi
lidade.
\end_layout

\end_deeper
\begin_layout Itemize
Classe CDadosRegistradorPressao: Classe que cria 2 vetores e os preenche
 com os dados de teste de pressão importados de um arquivo de disco.
\end_layout

\begin_deeper
\begin_layout Itemize
atributo pressaoMedida.
\end_layout

\begin_layout Itemize
atributo tempoSemProducao.
\end_layout

\begin_layout Itemize
método Importa ( ): Método do tipo void que preenche os vetores.
\end_layout

\begin_layout Itemize
método PressaoMedida (_pressaoMedida): Método que seta o valor do atributo
 pressaoMedida.
\end_layout

\begin_layout Itemize
método PressaoMedida (_posicao): Método que seta o valor do atributo pressaomedi
da na posicao desejada.
\end_layout

\begin_layout Itemize
método PressaoMedida ( ): Método que retorna o valor do atributo pressaoMedida.
 
\end_layout

\begin_layout Itemize
método TempoSemProducao (_tempoSemProducao): Método que seta o valor do
 atributo tempoSemProducao.
\end_layout

\begin_layout Itemize
método TempoSemProducao (_posicao): Método que seta o valor do atributo
 tempoSemProducao na posição desejada.
 
\end_layout

\begin_layout Itemize
método TempoSemProducao ( ): Método que retorna o valor do atributo tempoSemProd
ucao.
 
\end_layout

\end_deeper
\begin_layout Itemize
Classe CEstatistica: Classe que faz a média e desvio padrão de vetores,
 necessários para a regressão linear dos dados.
\end_layout

\begin_deeper
\begin_layout Itemize
atributo media.
\end_layout

\begin_layout Itemize
atributo desvio.
\end_layout

\begin_layout Itemize
método Media (v): Retorna a média do vetor v.
\end_layout

\begin_layout Itemize
método DesvioPadrao (v): Retorna o desvio padrão de v.
\end_layout

\end_deeper
\begin_layout Itemize
Classe CAjusteCurvaMinimosQuadrados: Classe que faz a regressão linear através
 do método dos mínimos quadrados.
\end_layout

\begin_deeper
\begin_layout Itemize
atributo coeficienteAngular.
\end_layout

\begin_layout Itemize
atributo coeficienteLinear.
\end_layout

\begin_layout Itemize
atributo coeficienteCorrelacao.
\end_layout

\begin_layout Itemize
método CoeficienteAngular (vx,vy): Retorna o coeficiente angular da reta
 obtida da regressão dos vetores vx e vy.
\end_layout

\begin_layout Itemize
método CoeficienteLinear (vx,vy): Retorna o coeficiente linear da reta obtida
 da regressão dos vetores vx e vy.
\end_layout

\begin_layout Itemize
método CoeficienteCorrelacao (vx,vy): Retorna o coeficiente correlação da
 reta obtida da regressão dos vetores vx e vy.
\end_layout

\end_deeper
\begin_layout Itemize
Classe CAjusteCurva: Classe que executa a regressão linear (de uma reta
 semilogarítmica) dos dados obtidos e verifica se o coeficiente de correlação
 é satisfatório, caso não seja, descobre-se a melhor aproximação (o ponto)
 onde começa a reta da curva (a curva sendo o efeito de estocagem).
\end_layout

\begin_deeper
\begin_layout Itemize
atributo m: Representa o coeficiente angular da reta obtida na regressão
 linear.
\end_layout

\begin_layout Itemize
atributo n: Representa o coeficiente linear da reta obtida na regressão
 linear.
\end_layout

\begin_layout Itemize
atributo r: Coeficiente de correlação da reta, quanto mais próximo de 1,
 melhor a regressão linear.
\end_layout

\begin_layout Itemize
atributo logt: Vetor que relaciona as variáveis tp e o vetor deltat.
\end_layout

\begin_layout Itemize
atributo efeitoEstocagem
\end_layout

\begin_layout Itemize
método Regressao (vx, vy, z): Função que executa a regressão linear propriamente
 dita dos vetores, calculando os valores de m, n e r.
\end_layout

\begin_layout Itemize
método Ajuste (vx, vy, z): Função que analisa se a regressão linear tem
 um fator de correlação de Pearson suficiente para o programa gerar resultados
 confiáveis.
\end_layout

\end_deeper
\begin_layout Itemize
Classe CGnuplot: Classe que possibilita a geração de gráficos usando o programa
 externo Gnuplot.
\end_layout

\begin_layout Itemize
Classe CSimuladorAnaliseTestePressao: Classe principal, que se comunica
 com os objetos das outras classes para inferir parâmetros do reservatório
 e calcular outras variáveis a partir de equações de correlação.
\end_layout

\begin_deeper
\begin_layout Itemize
atributo permeabilidade.
\end_layout

\begin_layout Itemize
atributo pressaoInicial.
\end_layout

\begin_layout Itemize
atributo fatorPelicula.
\end_layout

\begin_layout Itemize
atributo pressaoDano.
\end_layout

\begin_layout Itemize
atributo indiceProdutividade.
\end_layout

\begin_layout Itemize
atributo eficienciaFluxo.
\end_layout

\begin_layout Itemize
atributo raioEfetivo.
\end_layout

\begin_layout Itemize
atributo coeficienteEstocagem.
\end_layout

\begin_layout Itemize
atributo tempoEstocagem.
\end_layout

\begin_layout Itemize
método EntradaDados ( ): Método que chama as funções de entrada das classes
 CFluido, CPoco e CReservatorio.
\end_layout

\begin_layout Itemize
método CalculoPermeabilidade ( ): Função que calcula e exibe a permeabilidade
 do reservatório.
\end_layout

\begin_layout Itemize
método CalculoPressaoInicial ( ): Função que calcula e exibe a pressão inicial
 pela extrapolação da reta.
\end_layout

\begin_layout Itemize
método CalculoFatorPelicula ( ): Função que calcula e exibe o fator de película
 do reservatório e a queda de pressão devido à esse fator.
\end_layout

\begin_layout Itemize
método CalculoIndices ( ): Função que calcula e exibe o índice de produtividade
 do reservatório e a eficiência de fluxo.
\end_layout

\begin_layout Itemize
método CalculoRaioEfetivo ( ): Função que calcula e exibe o raio efetivo.
\end_layout

\begin_layout Itemize
método Exporta(): Método que exporta os resultados para um arquivo .dat com
 um nome escolhido pelo usuário.
\end_layout

\begin_layout Itemize
método Variacao(): Método que permite ao usuário variar um parâmetro selecionado
 e visualizar a mudança no comportamento do reservatório nos gráfico gerados.
\end_layout

\end_deeper
\begin_layout Itemize
Classe CCaracterizacaoReservatorio: Classe que caracteriza o reservatório,
 interpretando os resultados obtidos.
\end_layout

\begin_deeper
\begin_layout Itemize
método Caracterizacao (permeabilidade, fatorPelicula, indiceProdutividade,
 raioPoco, raioEfetivo): Função do tipo void que analisa os resultados e
 informa ao usuário a qualidade do reservatório submetido ao teste de pressão.
\end_layout

\end_deeper
\begin_layout Section
Diagrama de seqüência -- eventos e mensagens 
\begin_inset CommandInset label
LatexCommand label
name "sub:diagrama de sequência"

\end_inset


\end_layout

\begin_layout Standard

\shape italic
\emph on
O diagrama de seqüência enfatiza a troca de eventos e mensagens e sua ordem
 temporal.
 Contém informações sobre o fluxo de controle do programa.
 Costuma ser montado a partir de um diagrama de caso de uso e estabelece
 o relacionamento dos atores (usuários e sistemas externos) com alguns objetos
 do sistema.
\end_layout

\begin_layout Subsection

\shape italic
\emph on
Diagrama de sequência geral
\end_layout

\begin_layout Standard
Veja o 
\shape italic
\emph on
diagrama de seqüência na
\shape default
\emph default
 Figura 4.4.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename C:/Users/Renan/Desktop/Trabalho Programação Prática/imagens/diagrama_seq_geral.png
	scale 68
	rotateAngle 90
	rotateOrigin center

\end_inset


\begin_inset Caption

\begin_layout Plain Layout
O diagrama de sequência geral mostra a execução do programa, com ordem temporal
 da troca de eventos e mensagens.
 
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Subsection

\shape italic
\emph on
Diagrama de sequência específico
\end_layout

\begin_layout Standard
Veja o 
\shape italic
\emph on
diagrama de seqüência específico na
\shape default
\emph default
 Figura 4.5.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename C:/Users/Renan/Desktop/Trabalho Programação Prática/imagens/diagrama_seq_esp.png
	scale 68
	rotateAngle 90
	rotateOrigin center

\end_inset


\begin_inset Caption

\begin_layout Plain Layout
Diagrama de sequência específico mostra de forma mais detalhada uma parte
 do programa, no caso o cálculo dos parâmetros do reservatório.
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Section
Diagrama de comunicação -- colaboração 
\begin_inset CommandInset label
LatexCommand label
name "par:Diagrama-de-colaboração:"

\end_inset

 
\end_layout

\begin_layout Standard
Veja na Figura 4.6 o diagrama de comunicação.
 Observe que há muita interação entre os objetos de cada classe, iniciando
 pela entrada de dados para preencher os objetos de CPoco, CReservatorio
 e CFluido.
 Caso não ocorra erro na entrada, a classe DadosRegistradorPressãos importa
 os dados do arquivo de texto e informa para a classe CAjusteCurva.
 Esta, por sua vez, utiliza a classe CAjusteCurvaMinimosQuadrados que faz
 a regressao de dois vetores usando a média e o desvio padrão obtidos da
 classe CEstatistica.
 Após a função Ajuste (r), que encontra o coeficiente de estocagem, o SimuladorA
naliseTestePressao faz os cálculos dos parâmetros do reservatório com esses
 dados de entrada e de importação.
 Finalmente, a classe CCaracterizacao caracteriza o reservatorio com a função
 Caracterizacao (permeabilidade, fatorPelicula, indiceProdutividade, raioPoco,
 raioEfetivo).
 Essas interações são de vital importância para o funcionamento do programa
 e a caracterização do reservatório.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename C:/Users/Renan/Desktop/Trabalho Programação Prática/imagens/diagrama_comunicacao.png
	scale 70
	rotateOrigin center

\end_inset


\begin_inset Caption

\begin_layout Plain Layout
Diagrama de comunicação, que mostra o conjunto de objetos e seus relacionamentos
, incluindo as mensagens trocadas entre eles.
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Section
Diagrama de máquina de estado 
\begin_inset CommandInset label
LatexCommand label
name "sub:diagrama de estados"

\end_inset


\end_layout

\begin_layout Standard
Veja na Figura 4.7 o diagrama de máquina de estado para o objeto da classe
 CSimuladorAnaliseTestePressao.
 Observe que o objeto possui atributos informados pelo usuário na seleção
 do parâmetro a ser variado, e como será feita tal variação.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename C:/Users/Renan/Desktop/Trabalho Programação Prática/imagens/diagrama_maq_estado.png
	scale 90
	rotateOrigin center

\end_inset


\begin_inset Caption

\begin_layout Plain Layout
O diagrama de máquina de estado mostra os diversos estados que o objeto
 assume e os eventos que ocorrem ao longo do processo., modelando aspectos
 dinâmicos do objeto.
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Section
Diagrama de atividades
\end_layout

\begin_layout Standard
Veja na Figura 4.8 o diagrama de atividades do programa, incluindo a inovação.
 Observe que o atributo porosidade do objeto da classe CReservatorio é informado
 pelo usuário.
 Caso haja erro na entrada (porosidade informada menor do que zero), o programa
 pede uma nova entrada da porosidade, finalizando o preenchimento.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename C:/Users/Renan/Desktop/Trabalho Programação Prática/imagens/diagrama_atividades.png
	scale 80
	rotateAngle 90

\end_inset


\begin_inset Caption

\begin_layout Plain Layout
Diagrama de atividades, mostrando o fluxo de controle de uma atividade para
 outra e como serão empregados para fazer a modelagem de aspectos dinâmicos
 do sistema.
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\end_body
\end_document
